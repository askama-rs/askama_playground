name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "32 4 * * 5"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Update askama
        run: |
          git submodule init
          git submodule sync
          git submodule update --remote --no-recommend-shallow

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: fmt
        run: cargo fmt -- --check

  Build:
    needs:
      - Fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Update askama
        run: |
          git submodule init
          git submodule sync
          git submodule update --remote --no-recommend-shallow

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - name: Install trunk
        uses: taiki-e/install-action@v2
        with:
          tool: trunk@0.21.9

      - uses: Swatinem/rust-cache@v2

      - name: Compile project
        run: trunk build

  Clippy:
    needs:
      - Fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Update askama
        run: |
          git submodule init
          git submodule sync
          git submodule update --remote --no-recommend-shallow

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: clippy
        run: cargo clippy -- -D warnings

  Audit:
    needs:
      - Fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Update askama
        run: |
          git submodule init
          git submodule sync
          git submodule update --remote --no-recommend-shallow

      - name: Audit
        uses: EmbarkStudios/cargo-deny-action@v2

  devskim:
    needs:
      - Fmt
    name: DevSkim
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Update askama
        run: |
          git submodule init
          git submodule sync
          git submodule update --remote --no-recommend-shallow

      - name: Run DevSkim scanner
        uses: microsoft/DevSkim-Action@v1

      - name: Upload DevSkim scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: devskim-results.sarif

  deploy:
    if: github.ref == 'refs/heads/main'
    needs:
      - Build
      - Clippy
      - Fmt
      - Audit
      - devskim
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Update askama
        run: |
          git submodule init
          git submodule sync
          git submodule update --remote --no-recommend-shallow

      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - name: Install trunk
        uses: taiki-e/install-action@v2
        with:
          tool: trunk@0.21.9

      - uses: Swatinem/rust-cache@v2

      - name: Compile project
        run: trunk build --release

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
